package repo.services;

import org.hibernate.Hibernate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import repo.models.BlacklistLivres;
import repo.repositories.*;
import java.util.List;
import java.util.Optional;

/*
   File generated By
   Christooj_Generation_Code
*/
@Service
public class BlacklistLivresService {
    private final BlacklistLivresRepository repo;

    @Autowired
    public BlacklistLivresService(BlacklistLivresRepository rep) {
        this.repo = rep;
    }

    public BlacklistLivres create(BlacklistLivres object) {
        return repo.save(object);
    }

    @Transactional
    public List<BlacklistLivres> read() {
        List<BlacklistLivres> list = repo.findAll();
        for (BlacklistLivres b : list) {
            Hibernate.initialize(b.getLivre()); 
            Hibernate.initialize(b.getTypeAdherant());
        }
        return list;
    }

    public Optional<BlacklistLivres> readById(int id) {
        return repo.findById(id);
    }

    public BlacklistLivres update(int id, BlacklistLivres object) {
        try {
            Optional<BlacklistLivres> optional = repo.findById(id);
            if (optional.isPresent()) {
                BlacklistLivres existing = optional.get();
                existing.setTypeAdherant(object.getTypeAdherant());
                existing.setLivre(object.getLivre());
                return repo.save(existing);
            }
            return null;
        } catch(Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }

    public void delete(int id) {
        repo.deleteById(id);
    }
}